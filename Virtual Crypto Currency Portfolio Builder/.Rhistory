library(shiny)
library(quantmod)
library(PerformanceAnalytics)
library(dygraphs)
runApp()
runApp()
runApp()
paste0(as.character(2005), "/", as.character(Sys.Date()))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ticker <- str_trim(ticker, side = c("both", "left", "right"))
ticker <- "PNB.NS, SBIN.NS"
ticker <- str_trim(ticker, side = c("both", "left", "right"))
ticker
ticker <- str_squish(ticker)
ticker
ticker <- str_squish(ticker)
str_squish(ticker)
ticker <- "PNB.NS, SBIN.NS"
ticker <- gsub(" ", "", ticker)
ticker <- unlist(strsplit(ticker,split = ","))
ticker
data <- lapply(ticker, getSymbols, auto.assign = FALSE)
View(data)
data[[1]]
names(data) <- ticker
data[[1]]
data[["PNB.NS"]]
View(data)
data <- lapply(data,function(x){
x <- x[,6]
names(x) <- "Adjusted"
x
})
data[["PNB.NS"]]
data <- lapply(data, na.omit)
data[["PNB.NS"]]
names(data) <- ticker
View(data)
data[[1]]
viewFin(data[[1]])
view(data[[1]])
View(data)
View(data[[1]])
horizon <- paste0(as.character(2008), "/", as.character(Sys.Date()))
horizon
data <- lapply(data, function(x){
x <- x[horizon]
x
})
View(data[[1]])
data <- lapply(data, periodReturn,period = input$return_type, type = "arithmetic")
datar <- lapply(data, periodReturn,period = "daily", type = "arithmetic")
View(datar)
datar <- lapply(datar, merge.xts)
datar
View(datar)
datar <- lapply(datar, merge.xts)
merge.xts(datar)
merge.xts(datar[[1]],datar[[2]])
datar <- lapply(datar, cbind)
View(datar)
length(datar)
for (i in 1:(length(datar)-1)) {
data2 <- merge.xts(datar[[i]],datar[[i+1]])
}
View(data2)
colnames(data2) <- ticker
View(data2)
dygraph(datar, main = "Starbucks vs. Carnival vs. Apple vs. S&P 500") %>%
dyAxis("y", label = "Return")
data_return <- data[[1]]
data <- lapply(data, function(x){
x <- x[horizon]
x
})
datar <- lapply(data, periodReturn,period = "daily", type = "arithmetic")
data_return <- datar[[1]]
data_return
View(data_return)
for (i in 1:(length(datar)-1)) {
data_return <- merge.xts(data_return,datar[[i+1]])
}
View(data_return)
View(data_return)
dygraph(data_return, main = "Starbucks vs. Carnival vs. Apple vs. S&P 500") %>%
dyAxis("y", label = "Return")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(x)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
getSymbols("^GSPC")
View(GSPC)
getSymbols("GSPC")
runApp()
runApp()
runApp()
runApp()
ticker <- read.xlsx(file.choose())[,1]
ticker <- c(ticker,"^GSPC")
data <- lapply(ticker, getSymbols, auto.assign = FALSE)
View(data)
View(GSPC)
data[[4]]
names(data) <- ticker
View(data)
data <- lapply(data,function(x){
x <- x[,6]
names(x) <- "Adjusted"
x
})
data <- lapply(data, na.omit)
names(data) <- ticker
runApp()
runApp()
runApp()
ticker
ticker[1]
ticker[2]
ticker[3]
ticker[4]
data <- lapply(ticker, getSymbols, auto.assign = FALSE)
names(data) <- ticker
View(data)
data <- lapply(data,function(x){
x <- x[,6]
names(x) <- "Adjusted"
x
})
data <- lapply(data, function(x){
x <- na.approx(x[,"Adjusted"])
x
})
data <- lapply(data, function(x){
x <- na.approx(x[,"Adjusted"])
x
})
names(data) <- ticker
is.na(data[[1]])
sum(is.na(data[[1]]))
sum(is.na(data[[2]]))
sum(is.na(data[[3]]))
sum(is.na(data[[4]]))
sum(is.na(data[[5]]))
horizon <- paste0(as.character(2019), "/", as.character(Sys.Date()))
data <- lapply(data, function(x){
x <- x[horizon]
x
})
data <- lapply(data, periodReturn,period = "monthly", type = "arithmetic")
data
View(data)
##
data_return <- data[[1]]
length(data)
for (i in 1:(length(data)-1)) {
data_return <- merge.xts(data_return,data[[i+1]])
}
View(data_return)
data
runApp()
View(data_return)
weight <- read.xlsx(file.choose())[,2]
weight
portfolio_returns <- Return.portfolio(R = data_return[,1:(length(data_return)-1)], weights = weight, wealth.index = TRUE)
data_return
1:(length(data_return)-1)
length(data_return)
View(data_return)
data_return
length(data_return
)
ncol(data_return)
runApp()
library(shinybusy)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ticker <- read.xlsx(file.choose())[,1]
ticker <- c(ticker,"^GSPC")
data <- lapply(ticker, getSymbols, auto.assign = FALSE)
names(data) <- ticker
data <- lapply(data,function(x){
x <- x[,6]
names(x) <- "Adjusted"
x
})
data <- lapply(data, function(x){
x <- na.approx(x[,"Adjusted"])
x
})
names(data) <- ticker
horizon <- paste0(as.character(2019), "/", as.character(Sys.Date()))
data <- lapply(data, function(x){
x <- x[horizon]
x
})
data <- lapply(data, periodReturn,period = "monthly", type = "arithmetic")
data
##
data_return <- data[[1]]
for (i in 1:(length(data)-1)) {
data_return <- merge.xts(data_return,data[[i+1]])
}
colnames(data_return) <- ticker
View(data_return)
data <- lapply(ticker, getSymbols, auto.assign = FALSE)
names(data) <- ticker
data <- lapply(data,function(x){
x <- x[,6]
names(x) <- "Adjusted"
x
})
data <- lapply(data, function(x){
x <- na.approx(x[,"Adjusted"])
x
})
names(data) <- ticker
horizon <- paste0(as.character(2017), "/", as.character(Sys.Date()))
data <- lapply(data, function(x){
x <- x[horizon]
x
})
data <- lapply(data, periodReturn,period = "monthly", type = "arithmetic")
data
##
data_return <- data[[1]]
for (i in 1:(length(data)-1)) {
data_return <- merge.xts(data_return,data[[i+1]])
}
colnames(data_return) <- ticker
View(data_return)
runApp()
runApp()
rsconnect::setAccountInfo(name='shashank1495',
token='34EA64C663FB179C2A54EFEE80600E15',
secret='uh6KxxlkqdWQKu12iVTF/7hlL2mGCh7U2PQ5wY8U')
rsconnect::deployApp(account = "shashank1495","C:\\Users\\shash\\Documents\\R Projects\\testing_stock_portfolio")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
View(temp)
runApp()
is.na(temp)
c(is.na(temp))
find(FALSE,c(is.na(temp)))
find("FALSE",c(is.na(temp)))
TRUE in %in% c(is.na(temp))
TRUE %in% c(is.na(temp))
4 %in% c(is.na(temp))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rsconnect::deployApp(account = "shashank1495","C:\\Users\\shash\\Documents\\R Projects\\testing_stock_portfolio")
rsconnect::deployApp(account = "shashank1495","C:\\Users\\shash\\Documents\\R Projects\\testing_stock_portfolio")
library(shiny)
library(quantmod)
library(PerformanceAnalytics)
library(dygraphs)
library(stringr)
library(openxlsx)
library(corrplot)
library(shinybusy)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(temp)
View(temp[[4]])
runApp()
runApp()
runApp()
rsconnect::deployApp(account = "shashank1495","C:\\Users\\shash\\Documents\\R Projects\\testing_stock_portfolio")
rsconnect::deployApp(account = "shashank1495","C:\\Users\\shash\\Documents\\R Projects\\testing_stock_portfolio")
